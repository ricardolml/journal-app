{"version":3,"sources":["firebase/firebaseConfig.js","types/types.js","actions/ui.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/auth.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntrie.js","components/journal/JounalEntries.js","components/journal/SideBar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRouter.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","googleAuthProvider","GoogleAuthProvider","types","setError","err","type","payload","finishLoading","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","console","log","loadNotes","uid","getDocs","collection","notesSnap","notes","forEach","snapHijo","push","id","data","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNote","startSaveNote","getState","auth","url","noteToFirestore","updateDoc","doc","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","getAuth","signInWithEmailAndPassword","then","user","login","displayName","catch","e","message","logout","useForm","initialState","useState","values","setValues","handleInputChange","target","name","value","reset","newFormState","NotesAppBar","useDispatch","active","useSelector","state","noteDate","moment","date","className","format","style","display","onChange","files","text","showConfirmButton","allowEscapeKey","willOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","handleChangeInput","activeId","useRef","useEffect","current","placeholder","autoComplete","cols","rows","src","alt","noteRef","deleteDoc","startDeleting","NothingSelected","JournalEntrie","backgroundSize","backgroundImage","JounalEntries","map","SideBar","signOut","newNote","Date","getTime","addDoc","JournalScreen","LoginScreen","loading","ui","handleInputChanse","action","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","path","component","PrivateRouter","isAuthenticate","Component","rest","props","propType","PropTypes","bool","isRequired","func","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fca7d4d8.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from 'firebase/firestore';\nimport { GoogleAuthProvider } from 'firebase/auth';\n\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCKF3-S8cYw44tb3iaSI3NAXWRdX26TtD8\",\n  authDomain: \"react-app-9596f.firebaseapp.com\",\n  projectId: \"react-app-9596f\",\n  storageBucket: \"react-app-9596f.appspot.com\",\n  messagingSenderId: \"106953097556\",\n  appId: \"1:106953097556:web:6294d1ca1ee7a3c0c788c1\"\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\nconst db = getFirestore();\nconst googleAuthProvider = new GoogleAuthProvider();\n\nexport {\n    db,\n    googleAuthProvider\n}","\nexport const types = {\n    login : '[Auth] Login',\n    logout : '[Auth] Logout',\n\n    uiSetErros: '[UI] Set Error',\n    uiRemoveErros: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n    //notas\n    notesAddNew: '[Notes] New note',\n    notesActive: '[Notes] Set active note',\n    notesLoad  : '[Notes] Load notes',\n    notesUpdate: '[Notes] Update note save',\n    notesFileUrl: '[Notes] Update image note',\n    notesDelete: '[Notes] Delete note',\n    notesLogoutCleannig: '[Notes] Logout cleaning',\n\n}","import { types } from '../types/types';\n\nexport const setError = ( err ) =>({\n    type : types.uiSetErros,\n    payload : err\n})\n\nexport const removeError = () =>({\n    type : types.uiRemoveErros,\n})\n\nexport const startLoading = () =>({\n    type : types.uiStartLoading,\n})\n\nexport const finishLoading = () =>({\n    type : types.uiFinishLoading,\n})","\nexport const fileUpload = async ( file ) => {\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/ricardolml/upload'; //your url\n\n    const formData = new FormData();\n    formData.append('upload_preset','react-journal'); //your data\n    formData.append('file',file);\n\n    try{\n        const resp = await fetch( cloudUrl ,{\n            method: 'POST',\n            body: formData\n        } );\n\n        if( resp.ok ){\n            const cloudResp = await resp.json();\n            return cloudResp.secure_url;\n        }else{\n            console.log('hola perros')\n            throw await resp.json();\n        }\n    }catch( error ){        \n        throw error;\n    }\n}","import { collection, getDocs } from \"@firebase/firestore\";\nimport { db } from \"../firebase/firebaseConfig\";\n\n\nexport const loadNotes = async (uid) => {\n    const notesSnap = await getDocs(collection(db, `${uid}/journal/notes`));\n    const notes = [];\n\n    notesSnap.forEach(snapHijo => {\n        notes.push({\n            id: snapHijo.id,\n            ...snapHijo.data()\n        })\n    });\n\n    return notes;\n}","import { addDoc, collection, deleteDoc, doc, updateDoc } from \"@firebase/firestore\";\nimport Swal from \"sweetalert2\";\nimport { db } from \"../firebase/firebaseConfig\";\nimport { fileUpload } from \"../helpers/fileUpload\";\nimport { loadNotes } from \"../helpers/loadNotes\";\nimport { types } from \"../types/types\";\n\n\nexport const startNewNotes = () => {\n    return async (dispatch, getState) => {\n        const { uid } = getState().auth.uid;\n\n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime()\n        }\n\n        const doc = await addDoc(collection(db, `${uid}`, \"journal/notes\"), newNote);\n\n        dispatch(activeNote(doc.id, newNote));\n\n        dispatch( addNewNote( doc.id , newNote ) );\n\n    }\n}\n\nexport const activeNote = (id, note) => ({\n\n    type: types.notesActive,\n    payload: {\n        id,\n        ...note\n    }\n\n});\n\nexport const addNewNote = ( id , note) =>({\n    type: types.notesAddNew,\n    payload: {\n        id , ...note\n    }\n})\n\nexport const startLoadingNotes = (uid) => {\n    return async (dispatch) => {\n        const notes = await loadNotes(uid);\n        dispatch(setNote(notes));\n    }\n}\n\nexport const setNote = (notes) => ({\n    type: types.notesLoad,\n    payload: notes\n});\n// react-journal\nexport const startSaveNote = (note) => {\n    return async ( dispatch , getState) => {\n        const { uid } = getState().auth.uid;\n        if( !note.url ){\n            delete note.url;\n        }\n        const noteToFirestore = {...note};\n        delete noteToFirestore.id;\n        \n        await updateDoc( doc( db , `${uid}/journal/notes/${note.id}`  ) , noteToFirestore );      \n        dispatch( refreshNote(note.id , note) );\n\n        Swal.fire('Saved', note.title , 'success' );\n    }\n}\n\nexport const refreshNote = ( id , note) =>({\n    type : types.notesUpdate,\n    payload : {\n        id,\n        note\n    }   \n});\n\nexport const startUploading =  (file) =>{\n    return async ( dispatch , getState ) => {\n        const { active:activeNote } = getState().note;\n\n        Swal.fire({\n            title: 'Uploading...',\n            text: 'Please wait...',\n            showConfirmButton: false,\n            allowEscapeKey: false,\n            willOpen: () => {\n                Swal.showLoading();\n            }\n        });\n\n        const fileUrl = await fileUpload(file);\n        activeNote.url = fileUrl;\n        dispatch( startSaveNote( activeNote ) );\n       \n        Swal.close();\n    }\n}\n\n\nexport const startDeleting = ( id ) => {\n    return async ( dispatch , getState ) => {\n        const { uid } = getState().auth.uid;\n        const noteRef = doc(db, `${uid}/journal/notes/${id}`)\n        await deleteDoc(noteRef);\n\n        dispatch( deleteNote(id) );\n\n\n    }\n}\n\nexport const deleteNote = ( id ) =>({\n    type : types.notesDelete,\n    payload : id\n});\n\n\nexport const noteLogout = () =>({\n    type: types.notesLogoutCleannig\n});","import { getAuth, signInWithPopup, createUserWithEmailAndPassword, updateProfile, signInWithEmailAndPassword } from \"@firebase/auth\";\nimport { googleAuthProvider } from \"../firebase/firebaseConfig\";\nimport { types } from \"../types/types\";\nimport { finishLoading, startLoading } from \"./ui\";\n\nimport Swal from 'sweetalert2';\nimport { noteLogout } from \"./notes\";\n\nexport const startLoginEmailPassword = (email, password) => {\n    return (dispatch) => {\n        const auth = getAuth();\n        dispatch( startLoading() );\n        signInWithEmailAndPassword( auth, email, password)\n            .then( ({ user }) => {\n                dispatch( login(user.uid, user.displayName));\n                dispatch( finishLoading() );\n            }).catch(e => {\n                dispatch( finishLoading() );\n                Swal.fire('Error' , e.message , 'error');\n            });\n    }\n}\n\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\n    return (dispatch) => {\n        const auth = getAuth();\n        createUserWithEmailAndPassword(auth, email, password)\n            .then(async ({ user }) => {\n\n                await updateProfile(user, { displayName: name });\n                // console.log(user);\n                dispatch(\n                    login(user.uid, user.displayName)\n                )\n            }).catch(e => {\n                console.log(e)\n            });\n    }\n}\n\nexport const startGoogle = () => {\n\n    return (dispatch) => {\n        const auth = getAuth();\n        signInWithPopup(auth, googleAuthProvider).then(({ user }) => {\n            dispatch(\n                login(user.uid, user.displayName)\n            )\n        });\n    }\n}\n\nexport const login = (uid, displayName) => ({\n    type: types.login,\n    payload: {\n        uid,\n        displayName\n    }\n})\n\n\nexport const startLogout = () =>{\n\n    return async( dispatch ) => {\n        const auth = getAuth();\n        await auth.signOut();\n        dispatch( logout() );\n        dispatch( noteLogout() );\n    }\n\n}\n\nexport const logout = () => ({\n    type : types.logout\n})\n","import { useState } from \"react\"\n\nexport const useForm = ( initialState = {} ) => {\n    //initialState -> objeto con los campos del formulario\n    const [values, setValues] = useState(initialState); \n\n    const handleInputChange = ( {target} ) =>{\n        setValues({\n            ...values, \n            [ target.name ] : target.value\n        });\n    }\n\n    const reset = ( newFormState = initialState ) =>{\n        setValues( newFormState );\n    }\n\n    return [ values , handleInputChange , reset ];\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { startSaveNote, startUploading } from '../../actions/notes';\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch();\n    const { active } = useSelector(state => state.note);\n    \n    const noteDate = moment(active.date);\n    const handleSave = () => {\n        dispatch( startSaveNote( active ) ); \n    }\n\n    const handlePictureClic = () =>{\n        document.querySelector('#fileSelector').click();\n    }\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        if( file ){\n            dispatch( startUploading(file)  );\n        }\n    }\n\n    return (\n        <div className=\"notes__appBar\">\n            <span>{ noteDate.format('MMMM Do YYYY') }</span>\n            <input id=\"fileSelector\" type='file' style={ { display: 'none' } } onChange={handleFileChange} name='file' />\n            <div>\n                <button className=\"btn\" onClick={handlePictureClic}  >\n                    Picture\n                </button>\n                <button className=\"btn\" onClick={handleSave}>\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { activeNote, startDeleting } from '../../actions/notes';\nimport { useForm } from '../../hooks/useForm';\nimport { NotesAppBar } from './NotesAppBar';\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { active:note } = useSelector(state => state.note);\n\n    const [formValues, handleChangeInput , reset ] = useForm(note);\n\n    const activeId = useRef(note.id)\n\n    useEffect(() => {\n        if( note.id !== activeId.current ){\n            reset( note );\n            activeId.current = note.id;\n        }\n    }, [ note , reset ]);\n\n    useEffect(() => {\n        dispatch( activeNote( formValues.id , { ...formValues } ) );\n    }, [ formValues, dispatch ])\n\n    const { body, title, id } = formValues;\n\n    const handleDelete = () => {\n        dispatch( startDeleting( id ) );\n    }\n\n    return (\n        <div className=\"notes__main-content\">\n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n                <input name='title' onChange={handleChangeInput} value={title}  type=\"text\" placeholder=\"Some awesome tittle\" className=\"notes__title-input\" autoComplete=\"off\" />\n\n                <textarea name='body' onChange={handleChangeInput} value={body} cols=\"30\" rows=\"10\" placeholder=\"What happened today\" className=\"notes__textarea\"></textarea>\n\n                {\n                    (note.url)\n                    &&\n                    (\n                        <div className=\"notes__image\">\n                            <img src={note.url} alt=\"Imagen\" />\n                        </div>\n                    )\n                }\n\n            </div>\n\n            <button className='btn btn-danger' onClick={handleDelete}>Delete</button>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br />\n                \n                pr create an entry\n\n            </p>\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n        </div>\n    )\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { activeNote } from '../../actions/notes';\nimport { useDispatch } from 'react-redux';\n\nexport const JournalEntrie = ( { id, date , title, body, url } ) => {\n\n    const dispatch = useDispatch();\n\n    const noteDate = moment(date);\n\n    const handleEntryClick = () => {\n        dispatch( activeNote( id , {\n            date , title, body, url\n        }));\n    }\n\n    return (\n        <div className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\" onClick={handleEntryClick} >\n            {\n                ( url )\n                &&\n                (\n                    <div className=\"journal__entry-picture\" style={{ backgroundSize: 'cover', backgroundImage: `url(${url})` }} ></div>\n                )\n            }\n            \n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-tittle\">\n                    {title}\n                </p>\n\n                <p className=\"journal__entry-content\">\n                    {body}\n                </p>\n            </div>\n            <div className=\"journal__entry-date-box\">\n                <span>{noteDate.format('dddd')}</span>\n                <h4>{ noteDate.format('Do') }</h4>\n            </div>\n        </div>\n    )\n}\n","import { useSelector } from 'react-redux';\nimport { JournalEntrie } from './JournalEntrie';\n\nexport const JounalEntries = () => {\n    \n    const { notes } = useSelector(state => state.note);\n    return (\n        <div className=\"journal__entries\">\n            {\n                notes.map( note => (\n                    <JournalEntrie key={ note.id } {...note} />\n                ))\n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\nimport { startNewNotes } from '../../actions/notes';\nimport { JounalEntries } from './JounalEntries';\n\nexport const SideBar = () => {\n\n    const dispatch = useDispatch();\n\n    const { name } = useSelector(state => state.auth);\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n    const handleAddNew = () =>{\n        dispatch( startNewNotes() );\n    }\n\n    return (\n        <aside className=\"journal__sidebar\" >\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> { name } </span>\n                </h3>\n\n                <button className=\"btn\" onClick={handleLogout} >\n                    Logout\n                </button>\n            </div>\n\n            <div className=\"journal__new-entry\" onClick={handleAddNew} >\n                <li className=\"far fa-calendar-plus fa-5x\" ></li>\n                <p className=\"mt-5\" >New Entry</p>\n            </div>\n\n            <JounalEntries />\n        </aside>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { NothingSelected } from './NothingSelected';\nimport { SideBar } from './SideBar';\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector(state => state.note)\n\n    return (\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\n            <SideBar />\n\n            <main>\n                {\n                    active\n                        ?\n                        (\n                            <NoteScreen />\n                        )\n                        :\n                        (\n                            <NothingSelected />\n                        )\n                }\n            </main>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {  startGoogle, startLoginEmailPassword } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { loading } = useSelector(state => state.ui)\n\n    const [ formValues , handleInputChanse ] = useForm({\n        email : '',\n        password : ''\n    });\n\n    const { email , password } = formValues;\n\n    const handleLogin = ( e ) => {\n        e.preventDefault();\n        dispatch( startLoginEmailPassword( email, password ) );\n    }\n\n    const handleGoogleLogin = () =>{\n        dispatch( startGoogle() );\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__tittle\"> Login </h3>\n            <form action=\"\" onSubmit={handleLogin} className='animate__animated animate__fadeIn animate__faster '>\n                <input type=\"text\" placeholder='Email' name=\"email\" value={ email } onChange={ handleInputChanse } className=\"auth__info\" autoComplete=\"off\"/>\n                <input type=\"password\" placeholder='Password'  name=\"password\" value={ password } onChange={handleInputChanse} className=\"auth__info\"/>\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={ loading }>Ingresar</button>\n\n\n                <div className=\"auth__social-networks\" onClick={handleGoogleLogin}>\n                    <p>Login with social networks</p>\n\n                    <div\n                        className=\"google-btn\"\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n                <Link to=\"/auth/register\" className=\"link\" > Create new acount  </Link>\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch } from 'react-redux';\n\nimport validator from 'validator';\nimport { removeError, setError } from '../../actions/ui';\nimport { useSelector } from 'react-redux';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { msgError } = useSelector(state => state.ui)\n\n\n    const [formValues, handleInputChange] = useForm({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n\n    const { name, email, password, password2 } = formValues;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (isFormValid()) {\n            dispatch( startRegisterWithEmailPasswordName( email , password , name ) )\n        }\n    }\n\n    const isFormValid = () => {\n        if (name.trim().length === 0) {\n            dispatch(setError('NAME IS REQUIRED'));\n            return false;\n        } else if (!validator.isEmail(email)) {\n            dispatch(setError('EMAIL INVALID'));\n            return false;\n        } else if (password !== password2 || password.length < 5) {\n            dispatch(setError('PASSWORD SHOULD BE AT LEAST 6 CHARACTERS AND MATCH EACH OTHER'));\n            return false;\n        }\n\n        dispatch(removeError());\n        return true;\n\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__tittle\"> Registrer </h3>\n            <form action=\"\" onSubmit={handleRegister} className='animate__animated animate__fadeIn animate__faster' >\n\n                <input type=\"text\" placeholder='Name' name=\"name\" value={name} onChange={handleInputChange} className=\"auth__info\" autoComplete=\"off\" />\n                <input type=\"text\" placeholder='Email' name=\"email\" value={email} onChange={handleInputChange} className=\"auth__info\" autoComplete=\"off\" />\n                <input type=\"password\" placeholder='Password' name=\"password\" value={password} onChange={handleInputChange} className=\"auth__info\" />\n                <input type=\"password\" placeholder='Confirm' name=\"password2\" value={password2} onChange={handleInputChange} className=\"auth__info\" />\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block mb-5\">Ingresar</button>\n\n                {\n                    msgError\n                    &&\n                    (\n                        <div className='auth__alert-error'>\n                            {msgError}\n                        </div>\n                    )\n                }\n\n                <Link to=\"/auth/login\" className=\"link mt-5\" > Alredy Registrer?  </Link>\n            </form>\n        </>\n    )\n}\n","import React from 'react';\n\nimport {\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className='auth__main'>\n            <div className='auth__box-container'>\n                <Switch>\n                    <Route path='/auth/login' component={LoginScreen} />\n                    <Route path='/auth/register' component={RegisterScreen} />\n                    <Redirect to='/auth/login' />\n                </Switch>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router';\n\nexport const PrivateRouter = ({\n    isAuthenticate,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route { ...rest } component={ ( props ) => (\n            ( isAuthenticate )\n                ? <Component { ...props } />\n                : ( <Redirect to='/auth/login' /> )\n        )  } />\n    )\n}\n\n\nPrivateRouter.propType = {\n    isAuthenticate : PropTypes.bool.isRequired,\n    component : PropTypes.func.isRequired\n}","import React from 'react'\nimport { Redirect, Route } from 'react-router'\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({\n    isAuthenticate,\n    component: Component,\n    ...rest\n} ) => {\n    return (\n        <Route { ...rest } component={ ( props ) => (\n            ( isAuthenticate )\n                ? ( <Redirect to='/' /> )\n                : <Component { ...props } />\n        )  } />\n    )\n}\n\n\nPublicRoute.propType = {\n    isAuthenticate : PropTypes.bool.isRequired,\n    component : PropTypes.func.isRequired\n}","import { getAuth } from '@firebase/auth';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from \"react-router-dom\";\nimport { login } from '../actions/auth';\nimport { startLoadingNotes } from '../actions/notes';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { AuthRouter } from './AuthRouter';\nimport { PrivateRouter } from './PrivateRouter';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const [checking, setChecking] = useState(true);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        const auth = getAuth();\n        auth.onAuthStateChanged( async (user) => {\n            if( user?.uid ){\n                dispatch( login( user.uid , user.displayName ) );\n                setIsLoggedIn(true);\n                dispatch( startLoadingNotes(user.uid) );\n                \n            }else{\n                setIsLoggedIn(false);\n            }\n            setChecking(false);\n        });\n    }, [ dispatch, checking ] );\n\n    if ( checking ){\n        return ( <h1>Waite...</h1> )\n    }\n\n    return (\n        <Router>\n            <div>\n\n                <Switch>\n\n                    <PublicRoute path=\"/auth\" component={AuthRouter} isAuthenticate={isLoggedIn} />\n                    <PrivateRouter exact path=\"/\" component={ JournalScreen } isAuthenticate={isLoggedIn} />\n                    <Redirect to='/auth/login' />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\"\n\nconst initialState = {\n    notes : [],\n    active : null\n}\n\nexport const notesReducer = ( state = initialState , action ) => {\n\n    switch (action.type) {\n        case types.notesAddNew:\n            return {\n                ...state,\n                notes: [ action.payload, ...state.notes ]\n            }\n        case types.notesActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [...action.payload]\n            }\n        case types.notesUpdate:\n            return {\n                ...state,\n                notes : state.notes.map(\n                    note => note.id === action.payload.id\n                        ? action.payload.note\n                        : note\n                )\n            }\n        case types.notesFileUrl:\n            return {\n                ...state,\n            }\n        case types.notesDelete:\n            return {\n                ...state,\n                active: null,\n                notes : state.notes.filter( note => note.id !== action.payload  )\n            }\n        case types.notesLogoutCleannig:\n            return {\n                ...state,\n                active: null,\n                notes: []\n            }\n         \n        default:\n            return state;\n    }\n\n}","import { types } from '../types/types';\n\nconst initialState = {\n    loading: false,\n    msgError: null\n}\nexport const uiReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.uiSetErros:\n            return {\n                ...state,\n                msgError: action.payload\n            }\n        case types.uiRemoveErros:\n            return {\n                ...state,\n                msgError: null\n            }\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            }\n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            }\n        default:\n            return state;\n    }\n\n}","\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { authReducer } from '../reducers/authReducer';\nimport { notesReducer } from '../reducers/notesReducer';\nimport { uiReducer } from '../reducers/uiReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    note: notesReducer\n});\n\n\n\nexport const store = createStore( \n    reducers ,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);","import { types } from \"../types/types\";\n\n// const initialState = {\n//     uid : 122121,\n//     name : 'Ricardo',\n//     dir : {\n//         b : 12\n//     }\n// }\n\nexport const authReducer = ( state = {} , action ) => {\n\n    switch ( action.type ) {\n        case types.login:            \n            return {\n                uid : action.payload,\n                name : action.payload.displayName\n            }\n\n        case types.logout : \n            return {}\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport { Provider } from 'react-redux'\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\nexport const JournalApp = () => {\n    \n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss';\n\nReactDOM.render(\n//   <React.StrictMode>\n    <JournalApp />,\n//   </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}